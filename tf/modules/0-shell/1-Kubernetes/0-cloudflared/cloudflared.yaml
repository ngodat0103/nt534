---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: 1 # You could also consider elastic scaling for this deployment
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      containers:
      - name: cloudflared
        image: cloudflare/cloudflared:${CF_TUNNEL_VERSION}
        ports:
        - containerPort: 2000
        args:
        - tunnel
        # Points cloudflared to the config file, which configures what
        # cloudflared will actually do. This file is created by a ConfigMap
        # below.
        - --no-autoupdate
        - run
        - --token
        - ${CF_TUNNEL_TOKEN}
        # livenessProbe:
        #   httpGet:
        #     # Cloudflared has a /ready endpoint which returns 200 if and only if
        #     # it has an active connection to the edge.
        #     path: /ready
        #     port: 2000
        #   failureThreshold: 3
        #   initialDelaySeconds: 10
        #   periodSeconds: 10